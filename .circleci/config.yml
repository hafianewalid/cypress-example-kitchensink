version: 2.1
orbs:
  cypress: cypress-io/cypress@3.3.1
  win: circleci/windows@5.0.0

executors:
  mac:
    macos:
      xcode: "15.4.0"
    resource_class: macos.m1.medium.gen1
  browsers:
    docker:
      - image: 'cypress/browsers:node-20.14.0-chrome-126.0.6478.114-1-ff-127.0.1-edge-126.0.2592.61-1'

jobs:
  # win-test:
  #   working_directory: ~/app
  #   executor:
  #     name: win/default
  #     size: medium
  #     shell: bash.exe
  #   steps:
  #     - checkout

  #     - restore_cache:
  #         key: dependencies-{{ arch }}-{{ .Branch }}-{{ checksum "package.json" }}

  #     - run: npm ci
  #     - run: npm run cy:verify
  #     - run: npm run cy:info

  #     - save_cache:
  #         key: dependencies-{{ arch }}-{{ .Branch }}-{{ checksum "package.json" }}
  #         paths:
  #           - C:\Users\circleci\AppData\Local\Cypress\Cache
  #           - C:\Users\circleci\AppData\Roaming\npm-cache

  #     - run:
  #         name: List Cypress Test Files
  #         command: |
  #           find ./cypress -regextype posix-extended -regex ".*[-.](cy|spec).(js|ts)"

  #     - run:
  #         name: 'Start server'
  #         command: npm run start
  #         background: true

  #     - run:
  #         name: 'Run Cypress tests'
  #         command: npm run e2e -- --env circle=true
  #         no_output_timeout: '1m'
  #     - store_artifacts:
  #         path: cypress\screenshots

  # win-test-chrome:
  #   working_directory: ~/app
  #   executor:
  #     name: win/default
  #     size: medium
  #     shell: bash.exe
  #   steps:
  #     - checkout

  #     - restore_cache:
  #         key: dependencies-{{ arch }}-{{ .Branch }}-{{ checksum "package.json" }}

  #     - run: choco install googlechrome --ignore-checksums -y
  #     - run: npm ci
  #     - run: npm run cy:verify
  #     - run: npm run cy:info

  #     - save_cache:
  #         key: dependencies-{{ arch }}-{{ .Branch }}-{{ checksum "package.json" }}
  #         paths:
  #           - C:\Users\circleci\AppData\Local\Cypress\Cache
  #           - C:\Users\circleci\AppData\Roaming\npm-cache

  #     - run:
  #         name: 'Start server'
  #         command: npm run start
  #         background: true

  #     - run:
  #         name: 'Run Cypress tests'
  #         command: npm run e2e:chrome -- --env circle=true
  #         no_output_timeout: '1m'
  #     - store_artifacts:
  #         path: cypress\screenshots

  # win-test-firefox:
  #   working_directory: ~/app
  #   executor:
  #     name: win/default
  #     size: medium
  #     shell: bash.exe
  #   steps:
  #     - checkout

  #     - restore_cache:
  #         key: dependencies-{{ arch }}-{{ .Branch }}-{{ checksum "package.json" }}

  #     - run: choco install firefox -y
  #     - run: npm ci
  #     - run: npm run cy:verify
  #     - run: npm run cy:info

  #     - save_cache:
  #         key: dependencies-{{ arch }}-{{ .Branch }}-{{ checksum "package.json" }}
  #         paths:
  #           - C:\Users\circleci\AppData\Local\Cypress\Cache
  #           - C:\Users\circleci\AppData\Roaming\npm-cache

  #     - run:
  #         name: 'Start server'
  #         command: npm run start
  #         background: true

  #     - run:
  #         name: 'Run Cypress tests'
  #         command: npm run e2e:firefox -- --env circle=true
  #         no_output_timeout: '1m'
  #     - store_artifacts:
  #         path: cypress\screenshots

  # mac-test:
  #   executor: mac
  #   steps:
  #     - cypress/install:
  #         post-install: "npm run build"
  #     - run: npx cypress cache path
  #     - run: npx cypress cache list
  #     - run: npx cypress info
  #     - run:
  #         name: 'Run Cypress tests'
  #         command: npx cypress run
  #         no_output_timeout: '1m'

  test_cd:
    docker:
      - image: cypress/base:14.17.0
    steps:
      - checkout
      - run:
          name: Change Directory
          command: cd dir
      - run:
          name: Install Dependencies
          command: npm install
      - run:
          name: List Cypress Test Files
          command: |
            TEST_FILES=$(find ./cypress -regextype posix-extended -regex ".*[-.](cy|spec).(js|ts)")
            echo "$TEST_FILES" > test_files.txt
      - run:
          name: Run Cypress Tests
          command: |
            TEST_FILES=$(cat test_files.txt | tr '\n' ',')
            TEST_FILES=${TEST_FILES%,}  # Remove trailing comma
            npx cypress run --spec "$TEST_FILES"


  linux-test:
    parallelism: 3
    executor:
      name: cypress/default
      node-version: '20.13.1'
    steps:
      - cypress/install:
          post-install: 'npm run build'

      - run:
          name: List Cypress Test Files
          command: |
            find ./cypress -regextype posix-extended -regex ".*[-.](cy|spec).(js|ts)"

      - run:
          name: 'Cypress run tests'
          command: |
            TEST_FILES=$(find ./cypress -regextype posix-extended -regex ".*[-.](cy|spec).(js|ts)")
            echo "$TEST_FILES" > test_files.txt
            TEST_FILES=$(cat test_files.txt | tr '\n' ',')
            TEST_FILES=${TEST_FILES%,}
            npx cypress run --spec "$TEST_FILES"

      - run:
          name: 'Run Cypress tests'
          command: |
            npm install cypress-circleci-reporter
            TEST_FILES=$(find ./cypress -regextype posix-extended -regex ".*[-.](cy|spec).(js|ts)")
            echo "$TEST_FILES" | circleci tests run --command="xargs npx cypress run --reporter cypress-circleci-reporter --spec" --verbose
          no_output_timeout: '1m'
          post-steps:
            - store_test_results:
                path: test_results
      # - run: npx cypress cache path
      # - run: npx cypress cache list
      # - run: npx cypress info
      # - run: npx cypress version
      # - run: npx cypress version --component package
      # - run: npx cypress version --component binary
      # - run: npx cypress version --component electron
      # - run: npx cypress version --component node

  # linux-test-chrome:
  #   parallelism: 2
  #   executor:
  #     name: cypress/default
  #     node-version: '20.13.1'
  #   steps:
  #     - cypress/install:
  #         install-browsers: true
  #     - run:
  #         name: 'Run Cypress tests'
  #         command: npx cypress run --browser chrome
  #         no_output_timeout: '1m'

  # linux-test-firefox:
  #   parallelism: 2
  #   executor:
  #     name: cypress/default
  #     node-version: '20.13.1'
  #   steps:
  #     - cypress/install:
  #         install-browsers: true
  #     - run:
  #         name: 'Run Cypress tests'
  #         command: npx cypress run --browser firefox
  #         no_output_timeout: '1m'

  # release:
  #   executor:
  #     name: cypress/default
  #     node-version: '20.13.1'
  #   steps:
  #     - checkout
  #     - run: npx semantic-release@23.1.1

workflows:
    # win-build:
    #   jobs:
    # - win-test
    #     - win-test-chrome
    #     - win-test-firefox

    # mac-build:
    #   jobs:
    #     - mac-test

  linux-build:
    jobs:
      - test_cd
      # - linux-test
      # - linux-test-chrome
      # - linux-test-firefox

      # - release:
      #     filters:
      #       branches:
      #         only:
      #           - master
      #     requires:
      #       - linux-test
      #       # - linux-test-chrome
      #       # - linux-test-firefox
